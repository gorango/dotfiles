#!/bin/bash

recursive=false

while getopts ":r" opt; do
  case ${opt} in
  r) recursive=true ;;
  *)
    echo "Usage: $0 [-r] <image_path>"
    exit 1
    ;;
  esac
done
shift $((OPTIND - 1))

img_path="$1"

if [ -z "$img_path" ]; then
  echo "Error: No path provided. Usage: $0 [-r] <image_path>"
  exit 1
fi

dir_path="$(dirname "$img_path")"

if [ ! -d "$dir_path" ]; then
  echo "Error: Directory '$dir_path' does not exist."
  exit 1
fi

urlencode() {
  local string="$1"
  printf '%s' "$string" | python3 -c 'import urllib.parse, sys; print(urllib.parse.quote(sys.stdin.read()))'
}

files=()
found_files=false

echo "Debug: Searching in directory '$dir_path'"

if [ "$recursive" = true ]; then
  while IFS= read -r -d '' file; do
    found_files=true
    echo "Debug: Found file '$file'"
    encoded_file=$(urlencode "$file")
    files+=("file://$encoded_file")
  done < <(find "$dir_path" -type f \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.avi" \) -print0 2>/dev/null)
else
  while IFS= read -r -d '' file; do
    found_files=true
    echo "Debug: Found file '$file'"
    encoded_file=$(urlencode "$file")
    files+=("file://$encoded_file")
  done < <(find "$dir_path" -maxdepth 1 -type f \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.avi" \) -print0 2>/dev/null)
fi

if [ "$found_files" = true ]; then
  cd "$dir_path" || exit
  echo "Debug: Playing ${#files[@]} files"
  vlc "${files[@]}" \
    --loop \
    --no-video-title-show \
    --qt-start-minimized \
    --no-qt-error-dialogs \
    --quiet 2>/dev/null &
else
  echo "Debug: No video files found in '$dir_path'"
  notify-send "No videos found in this folder."
fi
